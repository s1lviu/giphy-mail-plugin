//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//
#pragma clang system_header



@class NSArray, NSData, NSInputStream, NSOutputStream, NSPort, NSString;

@interface MCSocket : NSObject <NSStreamDelegate>
{
    NSArray *_clientCertificates;
    BOOL _useSSL;
    BOOL _disableEphemeralDiffieHellmanCiphers;
    BOOL _scheduledForBytesToArrive;
    NSUInteger _identifier;
    long long _activityType;
    double _connectTimeout;
    double _readWriteTimeout;
    NSArray *_trustedCertificates;
    NSPort *_wakeupPort;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    id _bytesAvailableHandler;
}

+ (id)log;
- (void)_cancelLookupForHost:(struct __CFHost *)arg1 infoType:(int)arg2;
- (BOOL)_handleReadWriteErrorOnStream:(id)arg1 timedOut:(BOOL)arg2 logDetails:(id)arg3 error:(id *)arg4;
- (void)_scheduleInputStreamInMainRunLoopIfNecessary;
- (BOOL)_setSSLStreamProperties:(BOOL)arg1;
- (BOOL)_setupStreamsWithHostname:(id)arg1 port:(long long)arg2 needToEstablishInternetConnection:(char *)arg3 useSSL:(char *)arg4 isBackground:(BOOL)arg5 error:(id *)arg6;
- (void)_unscheduleInputStreamFromMainRunLoopIfNecessary;
- (id)_waitForSecurityLayerNegotiationStreamsAreScheduled:(BOOL)arg1;
@property long long activityType; // @synthesize activityType=_activityType;
@property(copy) id bytesAvailableHandler; // @synthesize bytesAvailableHandler=_bytesAvailableHandler;
@property(readonly, nonatomic) unsigned int cipherKeyLength;
- (void)close;
@property(nonatomic) double connectTimeout; // @synthesize connectTimeout=_connectTimeout;
- (BOOL)connectToHost:(id)arg1 withPort:(long long)arg2 isBackground:(BOOL)arg3;
- (void)dealloc;
@property BOOL disableEphemeralDiffieHellmanCiphers; // @synthesize disableEphemeralDiffieHellmanCiphers=_disableEphemeralDiffieHellmanCiphers;
@property(readonly) NSUInteger identifier; // @synthesize identifier=_identifier;
- (id)init;
@property(retain) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(readonly, nonatomic) BOOL isExpensive;
@property(readonly, nonatomic) BOOL isReadable;
@property(readonly, nonatomic) BOOL isValid;
@property(readonly, nonatomic) BOOL isWritable;
@property(retain) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
- (long long)readBytes:(void *)arg1 maxLength:(NSUInteger)arg2 error:(id *)arg3;
@property(nonatomic) double readWriteTimeout; // @synthesize readWriteTimeout=_readWriteTimeout;
- (void)registerForBytesToArriveWithHandler:(id)arg1;
@property(readonly, copy, nonatomic) NSString *remoteHostname;
@property(readonly, nonatomic) long long remotePortNumber;
@property BOOL scheduledForBytesToArrive; // @synthesize scheduledForBytesToArrive=_scheduledForBytesToArrive;
@property(readonly, copy, nonatomic) NSString *securityLevel;
- (struct __SecTrust *)serverTrust;
- (void)setClientIdentity:(struct OpaqueSecIdentityRef *)arg1;
@property(copy) NSArray *trustedCertificates; // @synthesize trustedCertificates=_trustedCertificates;
- (BOOL)setUsesSSL:(BOOL)arg1;
@property(readonly, copy, nonatomic) NSString *sourceHostname;
@property(readonly, copy, nonatomic) NSData *sourceIPAddress;
- (void)stream:(id)arg1 handleEvent:(NSUInteger)arg2;
- (void)unregisterForBytesToArrive;
@property(readonly, nonatomic) NSPort *wakeupPort; // @synthesize wakeupPort=_wakeupPort;
- (long long)writeBytes:(const void *)arg1 maxLength:(NSUInteger)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSUInteger hash;
@property(readonly) Class superclass;

@end

