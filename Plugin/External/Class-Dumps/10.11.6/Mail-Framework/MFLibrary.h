//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//
#pragma clang system_header


#import "MFLibraryInterface-Protocol.h"

@class NSString;

@interface MFLibrary : NSObject <MFLibraryInterface>
{
}

+ (id)EWSFolderIdForMailbox:(id)arg1;
+ (id)EWSFolderIdsByURLForMailboxes:(id)arg1;
+ (id)EWSSyncStateForMailbox:(id)arg1;
+ (BOOL)_EWSFolderExistsForMailbox:(id)arg1 errorString:(id)arg2;
+ (id)_EWSProperty:(char *)arg1 forMailbox:(id)arg2 errorString:(id)arg3;
+ (id)_activeMailboxesClauseRebuildIfNecessary;
+ (void)_addEWSProperty:(char *)arg1 value:(id)arg2 forMailbox:(id)arg3 errorString:(id)arg4;
+ (void)_addMessagesNeedingEmlxUpdate:(id)arg1;
+ (id)_backingStoreJournalDirectory;
+ (id)_backingStoreJournalURL;
+ (void)_checkInDBHandle:(id)arg1 forWriting:(BOOL)arg2;
+ (id)_checkOutDBHandleForWriting:(BOOL)arg1 isPrivileged:(BOOL)arg2;
+ (void)_commitFlagsForMessage:(id)arg1 oldFlags:(id)arg2;
+ (void)_commitMessagesInBackground:(id)arg1;
+ (id)_copyActiveMailboxesCache;
+ (id)_dataPathForMessage:(id)arg1 type:(long long)arg2;
+ (id)_dataPathForMessageWithLibraryID:(long long)arg1 mailboxID:(long long)arg2 type:(long long)arg3;
+ (id)_dataPathForMessageWithLibraryID:(long long)arg1 mailboxID:(long long)arg2 withFilename:(id)arg3;
+ (void)_deleteMailboxFromCoreSpotlight:(id)arg1;
+ (void)_deleteMessageFromCoreSpotlight:(id)arg1;
+ (id)_emlxPListInFile:(id)arg1 plistOffset:(NSUInteger *)arg2;
+ (id)_filenameForLibraryID:(long long)arg1 type:(long long)arg2;
+ (void)_getActiveAccountURLs:(id)arg1 andActiveMailboxURLs:(id)arg2;
+ (id)_getDetailsForMessagesWithQuery:(char *)arg1 contiguous:(BOOL)arg2 firstRemoteID:(NSUInteger)arg3 lastRemoteID:(NSUInteger)arg4 fromMailbox:(id)arg5 waitForWrites:(BOOL)arg6;
+ (void)_invalidateDirectoryForMailboxes:(id)arg1;
+ (BOOL)_isActiveMailboxID:(long long)arg1;
+ (long long)_libraryStatusCanWrite:(BOOL)arg1;
+ (void)_mailAccountsDidChange:(id)arg1;
+ (id)_mailboxForMailboxID:(long long)arg1;
+ (id)_mailboxForMailboxID:(long long)arg1 forceCreation:(BOOL)arg2;
+ (id)_mailboxIDsStringForMailboxes:(id)arg1;
+ (void)_mailboxWasRenamed:(id)arg1;
+ (void)_mailboxWillBeInvalidated:(id)arg1;
+ (void)_mergeRestoreMessageLibraryIDsToUpdate:(id)arg1;
+ (id)_messageDataAtPath:(id)arg1;
+ (id)_messagesDirectoryPathsFromDataPath:(id)arg1;
+ (id)_queryForCountCriterion:(id)arg1;
+ (char *)_queryForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;
+ (void)_queueMessagesNotification:(id)arg1 withUserInfo:(id)arg2;
+ (void)_rebuildActiveMailboxesCache;
+ (void)_rebuildActiveMailboxesCacheIfNecessary;
+ (void)_removeAlternatePathForEmlxPath:(id)arg1;
+ (void)_removeExtendedAttributePlistFromEMLX:(id)arg1;
+ (void)_removeMessages:(id)arg1 cleanUpAfter:(BOOL)arg2;
+ (void)_sendAttributesToCoreSpotlightForMessage:(id)arg1 replaceExisting:(BOOL)arg2 calculateSnippets:(BOOL)arg3;
+ (void)_sendSearchableItemsToCoreSpotlight:(id)arg1;
+ (void)_setCommitTimer:(id)arg1;
+ (void)_setDatabaseUUIDString:(id)arg1;
+ (void)_setRecipientTypeForMessages:(id)arg1;
+ (id)_spotlightSendQueue;
+ (void)_updateDateLastViewed:(int)arg1 forLibraryID:(long long)arg2;
+ (void)_updateMessageFilesInBackground;
+ (void)_upgradeMessageDirectoriesSynchronously;
+ (id)_v2V3MessagesDirectoryPathsForMailboxPath:(id)arg1 uuidDirectoryPaths:(id *)arg2;
+ (id)accountForMessage:(id)arg1;
+ (BOOL)addCalendarEvent:(id)arg1 toMessage:(id)arg2;
+ (void)addGmailLabelsToEmlx;
+ (id)addMessages:(id)arg1 withMailbox:(id)arg2 error:(id *)arg3;
+ (id)addMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(BOOL)arg3 isInitialImport:(BOOL)arg4 oldMessagesByNewMessage:(id)arg5 error:(id *)arg6;
+ (id)addMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(BOOL)arg3 isInitialImport:(BOOL)arg4 oldMessagesByNewMessage:(id)arg5 remoteIDs:(id)arg6 setFlags:(long long)arg7 clearFlags:(long long)arg8 messageFlagsForMessages:(id)arg9 copyFiles:(BOOL)arg10 missedMessages:(id *)arg11 error:(id *)arg12;
+ (id)addMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(BOOL)arg3 oldMessagesByNewMessage:(id)arg4 error:(id *)arg5;
+ (id)addMessages:(id)arg1 withMailbox:(id)arg2 progressDelegate:(id)arg3 error:(id *)arg4;
+ (NSUInteger)allegedHighestModificationSequenceforIMAPMailboxURL:(id)arg1;
+ (void)appendData:(id)arg1 forMessage:(id)arg2 part:(id)arg3;
+ (id)attachmentsDirectoryForMessage:(id)arg1;
+ (void)backfillDateLastViewedAttribute;
+ (id)bodyDataAtPath:(id)arg1 headerData:(id *)arg2;
+ (id)bodyDataForMessage:(id)arg1;
+ (id)bodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;
+ (BOOL)boolForCriterion:(id)arg1;
+ (BOOL)boolForQuery:(id)arg1;
+ (long long)cachedMailboxIDForMailbox:(id)arg1;
+ (id)calendarEventForMessageID:(long long)arg1;
+ (BOOL)canUseEmlxFileWhenCopyingMessage:(id)arg1 fromAccount:(id)arg2 toAccount:(id)arg3;
+ (void)cleanOldDatabases;
+ (void)cleanupTablesReferencingMessageID:(long long)arg1 inDatabase:(id)arg2;
+ (void)clearActiveMailboxesCache;
+ (void)clearLabelsForMailboxes:(id)arg1;
+ (void)commitFlagsForMessage:(id)arg1 oldFlags:(unsigned int)arg2;
+ (void)commitMessage:(id)arg1 immediately:(BOOL)arg2;
+ (void)commitSynchronously;
+ (void)commitSynchronouslyPostingMessages:(id)arg1 postFlags:(id)arg2 postingOldFlagsByMessage:(id)arg3;
+ (void)compactMailbox:(id)arg1;
+ (NSUInteger)computedHighestModificationSequenceforIMAPMailboxURL:(id)arg1;
+ (id)copyMailboxURLToRowIDMap;
+ (NSUInteger)countForCriterion:(id)arg1;
+ (NSUInteger)countForCriterion:(id)arg1 monitor:(id)arg2;
+ (id)countedSpotlightQueryStringWithQueryString:(id)arg1;
+ (struct __MDQuery *)createAllMailboxesSpotlightQueryWithQueryString:(id)arg1 attributes:(struct __CFArray *)arg2 queryLabel:(id)arg3 forUnreadCount:(BOOL)arg4 withMailboxExclusions:(BOOL)arg5 includeWhereFromsCriterion:(BOOL)arg6;
+ (id)criterionExpressionStringForStartLibraryID:(long long)arg1 count:(NSUInteger)arg2;
+ (id)currentMailbox;
+ (id)dataDirectoryForMailbox:(id)arg1;
+ (id)dataForMimePart:(id)arg1;
+ (id)dataPathForLibraryID:(long long)arg1 pathToMailbox:(id)arg2 fileExists:(char *)arg3;
+ (id)dataPathForLibraryID:(long long)arg1 pathToMailbox:(id)arg2 type:(long long)arg3;
+ (id)dataPathForMessage:(id)arg1;
+ (id)dataPathForMessage:(id)arg1 part:(id)arg2;
+ (id)databaseUUIDString;
+ (void)deleteDataDirectoriesForMailbox:(id)arg1;
+ (BOOL)deleteEventForMessage:(id)arg1;
+ (void)deleteFilesForMessageWithLibraryID:(long long)arg1 emlxDirectory:(id)arg2 attachmentsDirectory:(id)arg3 cachedDirectoryContents:(id)arg4;
+ (void)deleteMailboxes:(id)arg1;
+ (void)deleteMailboxes:(id)arg1 forRebuild:(BOOL)arg2;
+ (void)disableActiveMailboxFiltering;
+ (void)dispose;
+ (id)draftWithDocumentID:(id)arg1 mailbox:(id)arg2;
+ (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 createNewCacheFiles:(BOOL)arg7 error:(id *)arg8;
+ (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 messageFlagsForMessages:(id)arg7 createNewCacheFiles:(BOOL)arg8 error:(id *)arg9;
+ (id)duplicateRemoteIDsForMailboxWithURLString:(id)arg1;
+ (id)emlxPListAtURL:(id)arg1;
+ (void)executeBlock:(id)arg1 isWriter:(BOOL)arg2 useTransaction:(BOOL)arg3 isPrivileged:(BOOL)arg4;
+ (void)executeReadBlockInDatabase:(id)arg1;
+ (void)executeWriteBlockInDatabase:(id)arg1;
+ (id)existingDataPathForMessage:(id)arg1;
+ (BOOL)fileExists;
+ (id)filenameForLibraryID:(long long)arg1 part:(id)arg2;
+ (id)filterContiguousMessages:(id)arg1 forCriterion:(id)arg2 options:(unsigned int)arg3;
+ (id)firstReplyToMessage:(id)arg1;
+ (void)fixAttachmentCache;
+ (void)flagsChangedForMessages:(id)arg1;
+ (void)flushCachedDatabases;
+ (id)fullBodyDataForMessage:(id)arg1;
+ (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2;
+ (id)fullMessageDataForMessage:(id)arg1;
+ (void)gatherCountsForMailbox:(id)arg1 totalCount:(NSUInteger *)arg2 unreadCount:(NSUInteger *)arg3 deletedCount:(NSUInteger *)arg4 totalSize:(NSUInteger *)arg5;
+ (id)getDetailsForMessagesWithRemoteIDStrings:(id)arg1 fromMailbox:(id)arg2;
+ (id)getDetailsForMessagesWithRemoteIDs:(id)arg1 fromMailbox:(id)arg2 waitForWrites:(BOOL)arg3;
+ (BOOL)hasCacheFileForMessage:(id)arg1;
+ (BOOL)hasCacheFileForMessage:(id)arg1 part:(id)arg2;
+ (id)headerDataForLibraryID:(long long)arg1 mailboxID:(long long)arg2;
+ (id)headerDataForMessageWithPath:(id)arg1;
+ (void)hideMailboxesNotInLibraryFromSpotlight;
+ (BOOL)importMailbox:(id)arg1;
+ (BOOL)importMessagesFromEnabledAccounts;
+ (id)incompleteMessagesForMailbox:(id)arg1;
+ (void)incrementRunningIndexOfCurrentMessage;
+ (void)initialize;
+ (id)insertOrUpdateMessages:(id)arg1 withMailbox:(id)arg2 fetchBodies:(BOOL)arg3 isInitialImport:(BOOL)arg4 isMailboxRebuild:(BOOL)arg5 oldMessagesByNewMessage:(id)arg6 remoteIDs:(id)arg7 newDocumentIDs:(id)arg8 setFlags:(long long)arg9 clearFlags:(long long)arg10 messageFlagsForMessages:(id)arg11 copyFiles:(BOOL)arg12 progressDelegate:(id)arg13 updateRowIDs:(id)arg14 missedMessages:(id *)arg15 error:(id *)arg16;
+ (id)intermediateDirectoryForLibraryID:(long long)arg1 forAttachments:(BOOL)arg2;
+ (void)invalidateMyEmailAddresses;
+ (BOOL)isEmptyDB;
+ (BOOL)isInitialized;
+ (BOOL)isLibraryMessage:(id)arg1;
+ (BOOL)isLocalAccount:(id)arg1;
+ (BOOL)isMessageContentLocallyAvailable:(id)arg1;
+ (BOOL)isRemoteStoreAccount:(id)arg1;
+ (id)lastMessageWithMessageID:(id)arg1 inMailbox:(id)arg2;
+ (int)lastWriteMinorVersion;
+ (BOOL)libraryIsImporting;
+ (long long)libraryStatusAsReader;
+ (long long)libraryStatusAsWriter;
+ (void)loadMessageCountsForMailboxes;
+ (void)loadSearchSettings;
+ (BOOL)loadSecondaryMetadataForMessage:(id)arg1;
+ (id)mailboxForMailboxID:(long long)arg1 forceCreation:(BOOL)arg2;
+ (id)mailboxForMessage:(id)arg1;
+ (long long)mailboxIDForMailbox:(id)arg1;
+ (long long)mailboxIDForMailbox:(id)arg1 loadIfNotPresent:(BOOL)arg2;
+ (id)mailboxNameForMessage:(id)arg1;
+ (void)mailboxesDidChange;
+ (void)markMessageAsViewed:(id)arg1 viewedDate:(id)arg2;
+ (unsigned int)maximumRemoteIDForMailbox:(id)arg1;
+ (BOOL)messageHasRelatedNonJunkMessages:(id)arg1;
+ (id)messageWithDataPath:(id)arg1;
+ (id)messageWithLibraryID:(long long)arg1;
+ (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2;
+ (id)messageWithMessageID:(id)arg1;
+ (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2 options:(unsigned int)arg3;
+ (id)messagesForGmailLabel:(id)arg1 inAllMailMailbox:(id)arg2 olderThanNumberOfDays:(long long)arg3;
+ (id)messagesForMailbox:(id)arg1 olderThanNumberOfDays:(long long)arg2;
+ (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;
+ (id)messagesMatchingCriterion:(id)arg1 options:(unsigned int)arg2 searchType:(long long)arg3;
+ (id)messagesMatchingQuery:(const char *)arg1 options:(unsigned int)arg2;
+ (id)messagesWhere:(id)arg1 sortedBy:(id)arg2 options:(unsigned int)arg3;
+ (id)messagesWithMessageID:(id)arg1 inMailbox:(id)arg2;
+ (id)messagesWithMessageIDHeader:(id)arg1;
+ (id)messagesWithRemoteIDs:(id)arg1 inMailbox:(id)arg2 options:(unsigned int)arg3;
+ (id)myAddressIDsString;
+ (NSUInteger)numberOfMessagesForAccount:(id)arg1;
+ (id)plistDataForMessage:(id)arg1 dateReceived:(id)arg2 dateLastViewed:(id)arg3 remoteID:(id)arg4 gmailLabels:(id)arg5 flags:(long long)arg6 mergeWithDictionary:(id)arg7;
+ (void)prepareToReImportMessages;
+ (id)queryForCriterion:(id)arg1 options:(unsigned int)arg2;
+ (id)queryForCriterion:(id)arg1 options:(unsigned int)arg2 baseTable:(NSUInteger)arg3 isSubquery:(BOOL)arg4 fixUpCriterion:(BOOL)arg5;
+ (void)queueConversationsChangedNotification:(id)arg1;
+ (void)queueMessageGmailLabelsChangedNotificationForMessages:(id)arg1;
+ (void)queueMessagesAddedNotification:(id)arg1;
+ (void)queueMessagesChangedNotificationForMessages:(id)arg1 flags:(id)arg2 oldFlagsByMessage:(id)arg3;
+ (void)queueMessagesCompactedNotification:(id)arg1;
+ (void)queueMessagesDeletedBackupManagerNotification:(id)arg1;
+ (void)queueMessagesUpdatedNotification:(id)arg1;
+ (void)queueStoreFinishedFirstTimeSync:(id)arg1;
+ (BOOL)rebuildMailbox:(id)arg1;
+ (void)recalculateMessageCountsForMailboxIDs:(id)arg1;
+ (id)referencesAsEncodedMessageIDStringFromMessageHeaders:(id)arg1;
+ (id)referencesForLibraryID:(long long)arg1;
+ (void)registerStoreForUpdates:(id)arg1;
+ (void)reloadMessage:(id)arg1;
+ (id)remoteStoreForMessage:(id)arg1;
+ (BOOL)removeBackingStoreUpdateJournal;
+ (void)removeCurrentTemporaryDatabaseFiles;
+ (void)removeMessages:(id)arg1;
+ (void)removeSourceMailbox:(id)arg1;
+ (void)removeSourceMailboxFromMailboxes:(id)arg1;
+ (BOOL)renameMailboxes:(id)arg1 to:(id)arg2;
+ (void)resetConversationIDForMessages:(id)arg1;
+ (void)restoreBackingStoreUpdateJournalIfNeeded;
+ (NSUInteger)runningIndexOfCurrentMessage;
+ (void)scheduleCommit;
+ (void)scheduleMessageFileUpdate;
+ (void)sendMessagesMatchingCriterion:(id)arg1 to:(id)arg2 options:(unsigned int)arg3 searchType:(long long)arg4 queryLabel:(id)arg5 async:(BOOL)arg6;
+ (void)sendMessagesMatchingQuery:(const char *)arg1 to:(id)arg2 options:(unsigned int)arg3;
+ (void)setAllegedHighestModificationSequence:(NSUInteger)arg1 forIMAPMailboxURL:(id)arg2;
+ (void)setAttachmentNames:(id)arg1 forMessage:(id)arg2;
+ (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;
+ (void)setComputedHighestModificationSequence:(NSUInteger)arg1 forIMAPMailboxURL:(id)arg2;
+ (void)setCurrentMailbox:(id)arg1;
+ (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(BOOL)arg3;
+ (void)setData:(id)arg1 forMessage:(id)arg2 isPartial:(BOOL)arg3 hasCompleteText:(BOOL)arg4;
+ (void)setEWSFolderId:(id)arg1 forMailbox:(id)arg2;
+ (void)setEWSSyncState:(id)arg1 forMailbox:(id)arg2;
+ (void)setFlagsAndColorForMessages:(id)arg1;
+ (void)setInitialized;
+ (void)setLibraryIsImporting:(BOOL)arg1;
+ (void)setSnippetsForMessages:(id)arg1;
+ (void)setSourceMailbox:(id)arg1 forMailboxes:(id)arg2;
+ (void)setStoreForMessage:(id)arg1 fromMailbox:(id)arg2 knownStores:(id)arg3;
+ (void)setStoreForMessage:(id)arg1 knownStores:(id)arg2;
+ (void)setStoresForMessages:(id)arg1;
+ (void)setThreadPriority:(long long)arg1;
+ (void)setTotalNumberOfMessages:(NSUInteger)arg1;
+ (BOOL)setupLibrary;
+ (id)sharedInstance;
+ (BOOL)shouldCancel;
+ (id)snippetsForMessages:(id)arg1;
+ (id)spotlightCallbackDispatchQueue;
+ (id)spotlightQueryStringWithQueryString:(id)arg1;
+ (id)sqlListWithArray:(id)arg1;
+ (void)synchronouslyUpdateMessageFiles;
+ (void)takeAccountsOnlineAllAccounts:(BOOL)arg1;
+ (BOOL)threadIsExecutingInDatabaseBlock;
+ (long long)threadPriority;
+ (NSUInteger)totalCountForMailbox:(id)arg1 unseenCount:(NSUInteger *)arg2 adjustedUnreadCount:(NSUInteger *)arg3;
+ (NSUInteger)totalNumberOfMessages;
+ (void)touchDirectoryForMailbox:(id)arg1;
+ (void)unScheduleCommit;
+ (void)unScheduleMessageFileUpdate;
+ (NSUInteger)unreadCountForMessageType:(BOOL)arg1;
+ (id)unreadMessagesForMailbox:(id)arg1;
+ (NSUInteger)unsignedCountForQuery:(id)arg1 monitor:(id)arg2;
+ (BOOL)updateBackingStoreUpdateJournal;
+ (BOOL)updateCalendarEvent:(id)arg1 forMessage:(id)arg2;
+ (void)updateDatabaseValuesIfNeeded;
+ (void)updateEWSOfflineIdsToRealIds:(id)arg1;
+ (void)updateFileForMessage:(id)arg1;
+ (void)updateGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;
+ (void)updateJunkMessagesForIndexing;
+ (void)updateNormalizedSubjectsIfNeededWithHandle:(id)arg1;
+ (void)updateSize:(id)arg1 forMessage:(id)arg2;
+ (void)upgradeMessageDirectoriesIfNeeded;
+ (id)urlForMailboxID:(long long)arg1;
+ (id)v2v3IntermediateDirectoryForLibraryID:(long long)arg1 forAttachments:(BOOL)arg2;
+ (void)waitForCommitsToFinish;
+ (BOOL)writeEmlxFile:(id)arg1 forMessage:(id)arg2 withBodyData:(id)arg3 plistData:(id)arg4 error:(id *)arg5;
+ (id)writeQueue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSUInteger hash;
@property(readonly) Class superclass;

@end

