//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//
#pragma clang system_header

#import "MFRemoteStore.h"

#import "IMAPMailboxDelegate-Protocol.h"
#import "IMAPMessageDataSource-Protocol.h"

@class IMAPCommandPipeline, IMAPDownloadCache, IMAPMailbox, MCInvocationQueue, MFIMAPAccount, MFMailbox, NSArray, NSConditionLock, NSMutableArray, NSOperationQueue, NSString;

@interface MFLibraryIMAPStore : MFRemoteStore <IMAPMailboxDelegate, IMAPMessageDataSource>
{
    IMAPMailbox *_IMAPMailbox;
    IMAPDownloadCache *_downloadCache;
    IMAPCommandPipeline *_fetchPipeline;
    NSConditionLock *_copyLock;
    NSMutableArray *_pendingCompacts;
    MCInvocationQueue *_pendingCompactsQueue;
    NSMutableArray *_recentlyDeletedMessageIDs;
    id _uidNextStatusLock;
    BOOL _isOpenedByUser;
    BOOL _supportsCustomPermanentFlags;
    BOOL _supportsModificationSequences;
    NSUInteger _totalCount;
    NSString *_mailboxName;
    NSOperationQueue *_flagChangeQueue;
}

+ (id)_newDataFromMimePart:(id)arg1 threshold:(NSUInteger)arg2;
- (id)_IMAPMailbox;
- (long long)_appendToServerWithContext:(id)arg1 error:(id *)arg2;
- (void)_copyFlagsFromMessages:(id)arg1 flagsByMessage:(id)arg2 toMessagesWithUids:(id)arg3 withSyncHandler:(id)arg4 usedFlags:(id)arg5;
- (BOOL)_copyMessagesByID:(id)arg1 toStore:(id)arg2 settingFlags:(id)arg3 newMessages:(id)arg4 error:(id *)arg5;
- (id)_copyOfAllMessagesSortedByUidWithOptions:(unsigned int)arg1;
- (id)_dataForMessage:(id)arg1 readHeadersOnly:(BOOL)arg2;
- (id)_deletedMessages;
- (id)_existingUIDsForUIDs:(id)arg1;
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)_fetchDataForMimePart:(id)arg1 keepInMemory:(BOOL)arg2 writeToDisk:(BOOL)arg3;
- (void)_fetchForCheckingNewMail:(BOOL)arg1;
- (id)_fetchHeaderDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2;
- (void)_handleStoreFinishedFirstTimeSync:(id)arg1;
- (BOOL)_hasCachedDataForMimePart:(id)arg1 message:(id)arg2;
- (void)_invalidate;
- (BOOL)_isRebuildingOrSynchronizing;
- (BOOL)_isSynchronized;
- (id)_offlineCache;
- (void)_openSynchronouslyUpdatingMetadata:(BOOL)arg1 withOptions:(NSUInteger)arg2;
- (unsigned int)_permanentFlags;
- (id)_preferredOrderForFetchingMessageBodies:(id)arg1;
- (void)_processPendingCompacts;
- (void)_setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;
- (void)_storeFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 synchronously:(BOOL)arg3;
- (void)_synchronouslyStoreFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 serverInterface:(id)arg3;
- (void)_synchronouslyStoreLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)_uidIndexSetForMessages:(id)arg1;
- (id)_uidSearchForMessageIds:(id)arg1 destinationUidNext:(unsigned int)arg2 withSyncHandler:(id)arg3;
- (id)_waitForDataFromDownload:(id)arg1 uid:(unsigned int)arg2;
@property(readonly, nonatomic) MFIMAPAccount *account;
- (void)addMessages:(id)arg1 oldMessagesByNewMessage:(id)arg2;
@property(nonatomic) NSUInteger allegedHighestModificationSequence;
- (NSUInteger)allegedHighestModificationSequenceForMailbox:(id)arg1;
- (BOOL)allowsAppend;
- (BOOL)allowsOverwrite;
- (void)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)async_setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(BOOL)arg3;
- (void)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (void)async_setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(BOOL)arg3;
- (void)asynchronousCopyOfAllMessagesWithOptions:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 fetchIfNotAvailable:(BOOL)arg2 allowPartial:(BOOL)arg3;
@property(readonly, nonatomic) BOOL canCompact;
- (BOOL)canRebuild;
- (BOOL)canSetMessageColors;
- (void)checkNewMail;
- (void)cleanupSynchronously;
- (id)colorForMessage:(id)arg1;
- (void)compactMailbox:(id)arg1;
- (void)compactMessages:(id)arg1;
- (NSUInteger)computedHighestModificationSequenceForMailbox:(id)arg1;
- (id)copyIncompleteMessages;
- (id)copyMessagesWithoutValidUids;
- (id)copyOfAllMessagesWithOptions:(unsigned int)arg1;
- (id)copyOfOldCachedMessagesContentsForUid:(unsigned int)arg1;
- (id)dataForMimePart:(id)arg1;
- (void)dealloc;
- (void)deleteLastMessageWithHeaders:(id)arg1 compactWhenDone:(BOOL)arg2;
- (void)deleteMessages:(id)arg1 moveToTrash:(BOOL)arg2;
- (void)deleteMessagesOlderThanNumberOfDays:(long long)arg1 compact:(BOOL)arg2;
- (void)doCompact;
- (void)doRoutineCleanup;
@property(readonly, nonatomic) IMAPDownloadCache *downloadCache;
- (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 createNewCacheFiles:(BOOL)arg7;
- (id)duplicateMessages:(id)arg1 newRemoteIDs:(id)arg2 newDocumentIDs:(id)arg3 forMailbox:(id)arg4 setFlags:(long long)arg5 clearFlags:(long long)arg6 messageFlagsForMessages:(id)arg7 createNewCacheFiles:(BOOL)arg8;
- (id)duplicateRemoteIDs;
- (id)fetchAndCacheBodyDataForMessages:(id)arg1 withServerInterface:(id)arg2;
@property(readonly, nonatomic) IMAPCommandPipeline *fetchPipeline;
- (void)fetchSynchronously;
- (void)fetchSynchronouslyForKnownChanges;
@property(readonly, nonatomic) NSOperationQueue *flagChangeQueue; // @synthesize flagChangeQueue=_flagChangeQueue;
- (void)forceResync;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 fetchIfNotAvailable:(BOOL)arg3;
- (id)getDetailsForMessagesWithRemoteIDs:(id)arg1 waitForWrites:(BOOL)arg2;
- (BOOL)hasCachedDataForMimePart:(id)arg1;
- (BOOL)hasValidCacheFileForMessage:(id)arg1;
- (BOOL)hasValidCacheFileForUid:(unsigned int)arg1;
- (id)initWithCriterion:(id)arg1 mailbox:(id)arg2 readOnly:(BOOL)arg3;
- (void)invalidateSyncEngine;
@property(readonly, nonatomic) BOOL isAllMailMailbox;
@property(readonly, nonatomic) BOOL isInbox;
@property BOOL isOpenedByUser; // @synthesize isOpenedByUser=_isOpenedByUser;
@property(readonly) BOOL isReadOnly;
- (BOOL)isSortedAscending;
@property(readonly, nonatomic) MFMailbox *mailbox;
@property(copy) NSString *mailboxName; // @synthesize mailboxName=_mailboxName;
@property(readonly, nonatomic) unsigned int maximumRemoteID;
- (id)messageForMessageID:(id)arg1;
- (id)messageWithDefaultLoadOptionsAndRowID:(long long)arg1;
- (id)messageWithLibraryID:(long long)arg1 options:(unsigned int)arg2;
- (id)messageWithRemoteID:(id)arg1 inRemoteMailbox:(id)arg2;
@property(readonly, copy) NSMutableArray *messagesBeingAdded;
@property(readonly, copy, nonatomic) NSArray *messagesBeingRouted;
- (id)messagesForImporter;
- (id)messagesForMailbox:(id)arg1 where:(id)arg2 sortedBy:(id)arg3 ascending:(BOOL)arg4 options:(unsigned int)arg5;
- (void)messagesWereAdded:(id)arg1 secondaryMessages:(id)arg2 duringOpen:(BOOL)arg3 options:(id)arg4;
- (id)messagesWithRemoteIDs:(id)arg1;
- (id)messagesWithRowIDs:(id)arg1;
- (id)newDictionaryForLocalFlags:(unsigned int)arg1 serverFlags:(unsigned int)arg2 existingDictionary:(id)arg3;
- (id)objectSpecifierForMessage:(id)arg1;
- (id)offlineCacheIfOffline;
- (void)openAsynchronously;
- (void)openSynchronouslyUpdatingMetadata:(BOOL)arg1;
- (void)openSynchronouslyWithoutUserInteraction;
- (void)removeAllLocalMessages;
- (void)setBackgroundColorForMessages:(id)arg1 textColorForMessages:(id)arg2;
- (void)setComputedHighestModificationSequence:(NSUInteger)arg1;
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)setFlagsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(BOOL)arg3;
- (id)setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2;
- (id)setGmailLabelsFromDictionary:(id)arg1 forMessages:(id)arg2 updatingServer:(BOOL)arg3;
@property(nonatomic) BOOL supportsCustomPermanentFlags; // @synthesize supportsCustomPermanentFlags=_supportsCustomPermanentFlags;
@property BOOL supportsModificationSequences; // @synthesize supportsModificationSequences=_supportsModificationSequences;
@property NSUInteger totalCount; // @synthesize totalCount=_totalCount;
- (void)setUid:(unsigned int)arg1 forMessageWithTemporaryUid:(unsigned int)arg2;
@property(nonatomic) unsigned int uidNextStatus;
- (void)setUidNextStatusIfNeeded:(unsigned int)arg1;
- (void)setUidValidityStatus:(unsigned int)arg1;
- (BOOL)shouldCallCompactWhenClosing;
- (BOOL)shouldSendUserNotificationForMessage:(id)arg1;
- (id)sortOrder;
- (void)startSynchronization;
@property(readonly, copy, nonatomic) NSString *stateStringForDiagnostics;
- (NSUInteger)totalCountAndUnseenCount:(NSUInteger *)arg1 adjustedUnreadCount:(NSUInteger *)arg2;
@property(readonly, nonatomic) NSUInteger totalCountOfMessages;
- (unsigned int)uidValidityStatus;
- (void)undeleteMessagesWithRemoteIDs:(id)arg1;
- (long long)undoAppendOfMessageIDs:(id)arg1;
- (void)updateComputedHighestModificationSequence:(NSUInteger)arg1 forMailbox:(id)arg2;
- (void)updateUidValidityFromMailbox:(id)arg1;
- (void)writeUpdatedMessageDataToDisk;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly) NSUInteger hash;
@property(readonly, nonatomic) BOOL isSmartMailbox;
@property(readonly) Class superclass;
@property(readonly, nonatomic) BOOL supportsSnippets;

@end

